{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/security/authentication.service.ts","webpack:///./src/app/security/can-activate-auth.guard.ts","webpack:///./src/app/security/jwt-utils.service.ts","webpack:///./src/app/security/token-interceptor.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEE;AACyB;AAElF,IAAM,MAAM,GAAW;IACrB,iGAAiG;IACjG,oFAAoF;IACpF,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,8FAAqB,EAAE;CACjD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AClB7B,ixC;;;;;;;;;;;;;;;;;;;ACA0C;AAEgC;AAEjC;AAMzC;IAEE,sBAAoB,qBAA4C,EAC5C,MAAc;QADd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAQ;IAClC,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,iCAAU,GAAV;QACE,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;IACjD,CAAC;IAbU,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;SACpC,CAAC;+EAG2C,sFAAqB;YACpC,sDAAM;OAHvB,YAAY,CAcxB;IAAD,mBAAC;CAAA;AAdwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACI;AACU;AAEC;AACT;AAEmC;AACzB;AACiB;AACA;AACjB;AACsB;AAChB;AA0B/D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8FAAqB;gBACrB,qEAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,oEAAgB;aACjB;YACD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,4FAAuB;oBACjC,KAAK,EAAE,IAAI;iBACZ;gBACD,sFAAqB;gBACrB,uFAAoB;gBACpB,4EAAe;aAChB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxCtB,+DAA+D,2I;;;;;;;;;;;ACA/D,iyB;;;;;;;;;;;;;;;;;;;ACAqE;AAEK;AAGjC;AASzC;IAME,wBAAoB,qBAA2C,EAC3C,MAAc;QADd,0BAAqB,GAArB,qBAAqB,CAAsB;QAC3C,WAAM,GAAN,MAAM,CAAQ;QAChC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IAClC,CAAC;IAEF,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAQC;QAPC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChF,UAAC,QAAgB;YACf,IAAG,QAAQ,EAAC;gBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAvBU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;YAErC,aAAa,EAAE,+DAAiB,CAAC,IAAI;;SACtC,CAAC;+EAO0C,sFAAqB;YACnC,sDAAM;OAPvB,cAAc,CAyB1B;IAAD,qBAAC;CAAA;AAzB0B;;;;;;;;;;;;ACd3B,+DAA+D,mK;;;;;;;;;;;ACA/D,gE;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8HAA8C;;SAE/C,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;;;;;;;;;ACPS;AAIP;AACc;AACC;AACa;AAIhE;IAIE,+BAAoB,IAAgB,EAAU,eAAgC;QAA1D,SAAI,GAAJ,IAAI,CAAY;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAF7D,cAAS,GAAG,YAAY;IAEyC,CAAC;IAEnF,qCAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QAAxC,iBAmBC;QAlBC,IAAI,OAAO,GAAgB,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACnF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,YAAE,QAAQ,YAAE,CAAC,EAAE,EAAE,OAAO,WAAE,CAAC;aACvF,IAAI,CACH,0DAAG,CAAC,UAAC,GAAQ;YACX,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;YAChC,IAAI,KAAK,EAAE;gBACT,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC;oBACzB,QAAQ,EAAE,QAAQ;oBAClB,KAAK,EAAC,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC1C,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC,CAAC;gBAC5B,OAAO,IAAI,CAAC;aACb;iBACI;gBACH,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,IAAI,KAAK,GAAG,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC;QAC7C,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5B,CAAC;IAED,sCAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IAED,0CAAU,GAAV;QACE,IAAG,IAAI,CAAC,QAAQ,EAAE,IAAE,EAAE;YAAE,OAAO,IAAI,CAAC;;YAC/B,OAAO,KAAK,CAAC;IACpB,CAAC;IAED,8CAAc,GAAd;QACE,IAAG,YAAY,CAAC,WAAW,EAAC;YAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;SAC7C;aACG;YACF,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAjDU,qBAAqB;QADjC,gEAAU,EAAE;+EAKe,+DAAU,EAA2B,2EAAe;OAJnE,qBAAqB,CAkDjC;IAAD,4BAAC;CAAA;AAlDiC;;;;;;;;;;;;;;;;;;;;ACXS;AAGgC;AAClC;AAGzC;IAEE,8BAAoB,qBAA4C,EAAU,MAAc;QAApE,0BAAqB,GAArB,qBAAqB,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAE,CAAC;IAE3F,0CAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAC1B,IAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,EAAC;YACzC,OAAO,IAAI,CAAC;SACb;aACG;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAdU,oBAAoB;QADhC,gEAAU,EAAE;+EAGgC,sFAAqB,EAAkB,sDAAM;OAF7E,oBAAoB,CAehC;IAAD,2BAAC;CAAA;AAfgC;;;;;;;;;;;;;;;;;;ACPU;AAG3C;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR,UAAS,KAAY;QACnB,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7C,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;QACnD,OAAO,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,EAAX,CAAW,CAAC,IAAE,EAAE,CAAC;IACxD,CAAC;IATU,eAAe;QAD3B,gEAAU,EAAE;;OACA,eAAe,CAU3B;IAAD,sBAAC;CAAA;AAV2B;;;;;;;;;;;;;;;;;;;ACHe;AAEgC;AAKlC;AAIzC;IAEE,iCAAoB,GAAa;QAAb,QAAG,GAAH,GAAG,CAAU;IAAI,CAAC;IAEtC,2CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QACpD,IAAI,qBAAqB,GAAyB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,sFAAqB,CAAC,CAAC;QACtF,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,UAAU,EAAE;gBACV,cAAc,EAAE,KAAG,qBAAqB,CAAC,QAAQ,EAAI;aACtD;SACF,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAbU,uBAAuB;QADnC,gEAAU,EAAE;+EAGc,sDAAQ;OAFtB,uBAAuB,CAenC;IAAD,8BAAC;CAAA;AAfmC;;;;;;;;;;;;;ACXpC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CanActivateAuthGuard } from './security/can-activate-auth.guard';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n  // { path: 'record/:id', component: RecordDetailsComponent, canActivate:[CanActivateAuthGuard] },\r\n  // { path: 'main', component: MainComponent, canActivate:[CanActivateAuthGuard] },  \r\n  { path: 'login', component: LoginComponent},  \r\n  { path: '', redirectTo: 'main', pathMatch: 'full' },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n\\t<div class=\\\"container\\\">\\r\\n\\t\\t<div class=\\\"navbar-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n\\t\\t\\t\\t<span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t\\t<span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t\\t<span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<a class=\\\"navbar-brand\\\" href=\\\"#\\\">RecordStore</a>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n\\t\\t\\t<ul class=\\\"nav navbar-nav\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"active\\\"><a href=\\\"#\\\">Home</a></li>\\r\\n\\t\\t\\t\\t<li><a href=\\\"#about\\\">About</a></li>\\r\\n\\t\\t\\t\\t<li><a href=\\\"#contact\\\">Contact</a></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t\\t<ul class=\\\"nav navbar-nav pull-right\\\">\\r\\n\\t\\t\\t\\t<li *ngIf=\\\"isLoggedIn()\\\"><a (click)=\\\"logout()\\\">Logout</a></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</nav>\\r\\n<div class=\\\"container\\\" role=\\\"main\\\">\\r\\n\\t\\r\\n\\t<div class=\\\"jumbotron\\\">\\r\\n\\t\\t<h1>RecordStore</h1>\\r\\n\\t\\t<p>An example of Angular application styled with Bootstrap.</p>\\r\\n\\t</div>\\r\\n\\r\\n\\t<router-outlet></router-outlet>\\r\\n\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\nimport { AuthenticationService } from './security/authentication.service';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n              private router: Router){\r\n  }\r\n\r\n  logout():void{\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthenticationService } from './security/authentication.service';\r\nimport { CanActivateAuthGuard } from './security/can-activate-auth.guard';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptorService } from './security/token-interceptor.service';\r\nimport { JwtUtilsService } from './security/jwt-utils.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    },\r\n    AuthenticationService,\r\n    CanActivateAuthGuard,\r\n    JwtUtilsService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form class=\\\"form-signin\\\" (ngSubmit)=\\\"login()\\\">\\r\\n  <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\r\\n  <label for=\\\"username\\\" class=\\\"sr-only\\\">Username</label>\\r\\n  <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\" required autofocus>\\r\\n  <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n  <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" required>\\r\\n  <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n</form>\\r\\n<div *ngIf=wrongUsernameOrPass class=\\\"alert alert-warning box-msg\\\" role=\\\"alert\\\">\\r\\n  Wrong username or password.\\r\\n</div>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { AuthenticationService } from '../security/authentication.service'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  public wrongUsernameOrPass:boolean;\r\n\r\n  constructor(private authenticationService:AuthenticationService,\r\n              private router: Router) {\r\n    this.user = {};\r\n    this.wrongUsernameOrPass = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login():void{\r\n    this.authenticationService.login(this.user.username, this.user.password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate(['/main']);          \r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>\\r\\n  There is nothing here!\\r\\n</h1>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n// import { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { JwtUtilsService } from '../security/jwt-utils.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private readonly loginPath = '/api/login'\r\n\r\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(this.loginPath, JSON.stringify({ username, password }), { headers })\r\n      .pipe(\r\n        map((res: any) => {\r\n          let token = res && res['token'];\r\n          if (token) {\r\n            localStorage.setItem('currentUser', JSON.stringify({ \r\n                                      username: username, \r\n                                      roles:this.jwtUtilsService.getRoles(token), \r\n                                      token: token \r\n                                    }));\r\n            return true;\r\n          }\r\n          else {\r\n            return false;\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  getToken(): String {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n    return token ? token : \"\";\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isLoggedIn(): boolean{\r\n    if(this.getToken()!='') return true;\r\n    else return false;\r\n  }\r\n\r\n  getCurrentUser(){\r\n    if(localStorage.currentUser){\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else{\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../security/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class CanActivateAuthGuard implements CanActivate {\r\n  \r\n  constructor(private authenticationService: AuthenticationService, private router: Router){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if(this.authenticationService.isLoggedIn()){\r\n      return true;\r\n    }\r\n    else{\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class JwtUtilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token:string){\r\n    let jwtData = token.split('.')[1]\r\n    let decodedJwtJsonData = window.atob(jwtData)\r\n    let decodedJwtData = JSON.parse(decodedJwtJsonData)\r\n    return decodedJwtData.roles.map(x => x.authority)||[];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthenticationService } from '../security/authentication.service';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { HttpEvent } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http/src/headers';\r\nimport { Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private inj: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authenticationService:AuthenticationService = this.inj.get(AuthenticationService); \r\n    request = request.clone({\r\n      setHeaders: {\r\n        'X-Auth-Token': `${authenticationService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}