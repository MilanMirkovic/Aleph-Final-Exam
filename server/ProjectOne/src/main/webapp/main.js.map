{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/models/komentar.model.ts","webpack:///./src/app/models/projekat.model.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/projekat-details/projekat-details.component.css","webpack:///./src/app/projekat-details/projekat-details.component.html","webpack:///./src/app/projekat-details/projekat-details.component.ts","webpack:///./src/app/projekat.service.ts","webpack:///./src/app/registracija/registracija.component.css","webpack:///./src/app/registracija/registracija.component.html","webpack:///./src/app/registracija/registracija.component.ts","webpack:///./src/app/security/authentication.service.ts","webpack:///./src/app/security/can-activate-auth.guard.ts","webpack:///./src/app/security/jwt-utils.service.ts","webpack:///./src/app/security/token-interceptor.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CanActivateAuthGuard } from './security/can-activate-auth.guard';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { RegistracijaComponent } from './registracija/registracija.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { ProjekatDetailsComponent } from './projekat-details/projekat-details.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'main/projekat/:id', component:ProjekatDetailsComponent},\r\n  { path: 'main', component: MainComponent },  \r\n\r\n  { path: 'login', component: LoginComponent},  \r\n  // { path: '', redirectTo: 'main', pathMatch: 'full' },\r\n  // { path: '**', component: PageNotFoundComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n\\t\\r\\n\\t\\r\\n\\t\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"navbar-header\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n\\t\\t\\t\\t<span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t\\t<span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t\\t<span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<a class=\\\"navbar-brand\\\" href=\\\"#\\\">PH</a>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n\\t\\t\\t<ul class=\\\"nav navbar-nav\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"active\\\"><a [routerLink]=\\\"['main']\\\">Home</a></li>\\r\\n\\t\\t\\t\\t<li><a >About</a></li>\\r\\n\\t\\t\\t\\t<li><a href=\\\"#contact\\\">Contact</a></li>\\r\\n\\t\\t\\r\\n\\t\\t\\t</ul>\\r\\n\\r\\n\\t\\t <ul class=\\\"nav navbar-nav pull-right\\\">\\r\\n\\t\\t\\t\\t<li><a id=\\\"logOut\\\" *ngIf=\\\"isLoggedIn()\\\" (click)=\\\"logout()\\\">LogOut</a></li>\\r\\n\\t\\t\\t\\t<li><a id=\\\"logOut\\\" [routerLink]=\\\"['login']\\\" *ngIf=\\\"!isLoggedIn()\\\">LogIn</a></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\r\\n\\t</div>\\r\\n\\t\\r\\n\\r\\n\\t\\r\\n\\t\\t\\r\\n</nav>\\r\\n<div class=\\\"container\\\" role=\\\"main\\\">\\r\\n\\t\\r\\n\\t<div class=\\\"jumbotron\\\">\\r\\n\\t\\t<h1>Project Helper</h1>\\r\\n\\t\\t<p>An example of Angular application styled with Bootstrap.</p>\\r\\n\\t</div>\\r\\n\\t</div>\\r\\n<router-outlet></router-outlet> \\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\nimport { AuthenticationService } from './security/authentication.service';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n              private router: Router){\r\n  }\r\n\r\n  logout():void{\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  isLoggedIn():boolean{\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthenticationService } from './security/authentication.service';\r\nimport { CanActivateAuthGuard } from './security/can-activate-auth.guard';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TokenInterceptorService } from './security/token-interceptor.service';\r\nimport { JwtUtilsService } from './security/jwt-utils.service';\nimport { RegistracijaComponent } from './registracija/registracija.component';\nimport { MainComponent } from './main/main.component';\nimport { ProjekatDetailsComponent } from './projekat-details/projekat-details.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    LoginComponent,\r\n    RegistracijaComponent,\r\n    MainComponent,\r\n    ProjekatDetailsComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    },\r\n    AuthenticationService,\r\n    CanActivateAuthGuard,\r\n    JwtUtilsService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n<form class=\\\"form-signin\\\" (ngSubmit)=\\\"login()\\\">\\r\\n  <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\r\\n  <label for=\\\"username\\\" class=\\\"sr-only\\\">Username</label>\\r\\n  <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" placeholder=\\\"Username\\\" required autofocus>\\r\\n  <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n  <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.password\\\" placeholder=\\\"Password\\\" required>\\r\\n  <button class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n</form>\\r\\n<div *ngIf=wrongUsernameOrPass class=\\\"alert alert-warning box-msg\\\" role=\\\"alert\\\">\\r\\n  Wrong username or password.\\r\\n</div>\\r\\n\\r\\n</div>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { AuthenticationService } from '../security/authentication.service'\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public user;\r\n\r\n  public wrongUsernameOrPass:boolean;\r\n\r\n  usersInSystem:User[];\r\n\r\n  constructor(private authenticationService:AuthenticationService,\r\n              private router: Router,private http:HttpClient) {\r\n    this.user = {};\r\n    this.wrongUsernameOrPass = false;\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n  }\r\n\r\n  login():void{\r\n\r\n    this.authenticationService.login(this.user.username, this.user.password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate(['/main']);          \r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getUsers(){\r\n    this.http.get('api/users').subscribe((res:User[]) =>{\r\n      this.usersInSystem=res;\r\n    })\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \".buttons{\\r\\n    float: right;\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style-type: none;\\r\\n  }\\r\\n\\r\\n.sacuvaj-reset{\\r\\n    float: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0kscUJBQXFCO0VBQ3ZCOztBQUVGO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbnN7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbnVsIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICB9XHJcblxyXG4uc2FjdXZhai1yZXNldHtcclxuICAgIGZsb2F0OiByaWdodDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col input-group\\\">\\n\\n    <span>Name:  <input class=\\\"search\\\" type=\\\"text\\\" name=\\\"naziv\\\" id=\\\"\\\" [(ngModel)]=\\\"naziv\\\">\\n    </span>\\n\\n    <button (click)=\\\"filter()\\\">Filter</button>\\n     <button (click)=\\\"resetFilter()\\\">Clear</button> \\n  </div>\\n\\n\\n  <div class=\\\"row\\\">\\n   \\n   \\n    <div *ngIf=\\\"page\\\" class=\\\"col col-lg-9\\\">\\n      <div class=\\\"buttons\\\">\\n        <button [disabled]=\\\"page.first\\\" (click)=\\\"previousPage()\\\" class=\\\"glyphicon glyphicon-arrow-left\\\"></button>\\n        <button [disabled]=\\\"page.last\\\" (click)=\\\"nextPage()\\\" class=\\\"glyphicon glyphicon-arrow-right\\\"></button>\\n      </div>\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\"> Description</th>\\n            <th scope=\\\"col\\\">Action</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngFor=\\\"let p of page.content\\\">\\n          <tr>\\n            <td>{{p.naziv}}</td>\\n            <td>{{p.opis}}</td>\\n            <ul>\\n             <li> <a [routerLink]=\\\"['projekat',p.id]\\\"><button  class=\\\"btn btn-primary\\\">Details</button></a></li>\\n            <li> <button *ngIf=\\\"loggedIn\\\" (click)=\\\"izmeniProjekat(p)\\\" class=\\\"btn btn-default\\\"> Edit</button> </li>  \\n            <li> <button *ngIf=\\\"loggedIn\\\" (click)=\\\"obrisi(p)\\\" class=\\\"btn btn-danger\\\"> Delete</button> </li>  \\n          </ul>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n\\n    \\n  <div *ngIf=\\\"loggedIn\\\"  class=\\\"col col-lg-2\\\">\\n      <form action=\\\"\\\">\\n        <label for=\\\"label\\\">Name</label>\\n        <input name=\\\"naziv\\\"  type=\\\"text\\\" [(ngModel)]=\\\"projekatZaIzmenu.naziv\\\"/>\\n        <br/>\\n\\n          <label for=\\\"opis\\\">Description</label>\\n          <input name=\\\"opis\\\"  type=\\\"text\\\" [(ngModel)]=\\\"projekatZaIzmenu.opis\\\"  />\\n        <br/>\\n        <label for=\\\"read\\\">Read Me</label>\\n        <textarea name=\\\"readMe\\\"  type=\\\"text\\\" [(ngModel)]=\\\"projekatZaIzmenu.readMe\\\"></textarea>\\n        <!-- <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Sacuvaj\\\"/> -->\\n     \\n      </form>\\n      <br>\\n      <div class=\\\"sacuvaj-reset\\\">\\n      <button  class=\\\"btn btn-warning\\\" (click)=\\\"reset()\\\">Reset</button>\\n      <button  class=\\\"btn btn-primary\\\" (click)=\\\"sacuvajProjekat()\\\">Save</button>\\n    </div>\\n    \\n    </div>\\n    \\n  \\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProjekatService } from '../projekat.service';\nimport { Projekat } from '../models/projekat.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../security/authentication.service';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n\n  page: Page;\n  naziv: string;\n\n  izmeni: boolean = false;\n\n  projekatZaIzmenu: Projekat;\n\n  projekatZaDodavanje: Projekat;\n  loggedIn: boolean;\n  isAdministrator: boolean;\n  roles: any;\n  constructor(private projekatService: ProjekatService, private http: HttpClient, private authenticationService: AuthenticationService) {\n\n    this.projekatZaIzmenu = new Projekat({\n      id: 0,\n      naziv: '',\n      opis: '',\n      readMe: '',\n\n    })\n\n\n    this.naziv = '';\n  }\n\n  ngOnInit() {\n\n    this.loggedIn = this.authenticationService.isLoggedIn();\n\n\n    this.getPage(0);\n  }\n\n\n\n  getPage(pageNumber: number) {\n\n    this.projekatService.getAll(pageNumber).subscribe((res: Page) => {\n      this.page = res;\n    })\n\n  }\n\n  filter() {\n    this.projekatService.filterPoNazivu(this.naziv).subscribe((res: Page) => {\n      this.page = res;\n    });\n  }\n\n  resetFilter() {\n    this.naziv = '';\n    this.getPage(0);\n  }\n\n  previousPage() {\n    this.getPage(this.page.number - 1);\n  }\n\n  nextPage() {\n    this.getPage(this.page.number + 1);\n  }\n\n  izmeniClick() {\n    this.izmeni = !this.izmeni;\n\n  }\n\n  izmeniProjekat(p) {\n    this.projekatZaIzmenu = p;\n    this.izmeniClick();\n\n  }\n\n\n  sacuvajProjekat() {\n\n    if (this.projekatZaIzmenu.id === 0) {\n\n      this.projekatService.save(this.projekatZaIzmenu).subscribe((res: any) => {\n        this.getPage(0);\n      });\n    }\n    else {\n      this.projekatService.izmena(this.projekatZaIzmenu.id, this.projekatZaIzmenu).subscribe((res: any) => {\n        this.getPage(0);\n        this.projekatZaIzmenu = new Projekat({\n          id: 0,\n          naziv: '',\n          opis: '',\n          readMe: '',\n\n        })\n      })\n    }\n  }\n\n\n\n\n\n\n\n\n\n  obrisi(p: Projekat) {\n    this.http.delete<Page>(`api/projekti/${p.id}`).subscribe((res: Page) => {\n      this.page = res;\n      this.getPage(0);\n    })\n  }\n\n  reset() {\n    this.projekatZaIzmenu = new Projekat({\n      id: 0,\n      naziv: '',\n      opis: '',\n      readMe: '',\n\n    })\n\n  }\n\n\n\n}\n","import { ProjekatInterface } from './projekat.model';\r\n\r\nexport interface Komentar {\r\n    id?:number;\r\n\timeKorisnika?:string;\r\n\t\r\n\tprojekat?:ProjekatInterface;\r\n    komentar?:string;\r\n    upVote?:number;\r\n    downVote?:number;\r\n}\r\n\r\n\r\n\r\nexport class KomentarKlasa implements Komentar {\r\n    id?:number;\r\n\timeKorisnika?:string;\r\n\t\r\n\tprojekat?:ProjekatInterface;\r\n    komentar?:string;\r\n    upVote?:number;\r\n    downVote?:number;\r\n\r\n    constructor(k:Komentar){\r\n        this.downVote=k.downVote;\r\n        this.id=k.id;\r\n        this.imeKorisnika=k.imeKorisnika;\r\n        this.komentar=k.komentar;\r\n        this.projekat=k.projekat;\r\n        this.upVote=k.upVote;\r\n    }\r\n}\r\n","import { Komentar } from './komentar.model';\r\n\r\nexport interface ProjekatInterface {\r\n    id?:number;\r\n    naziv?:string;\r\n    opis?:string;\r\n    readMe?:string;\r\n    komentari?:Komentar;\r\n}\r\n\r\nexport class Projekat implements ProjekatInterface{\r\n    id:number;\r\n    naziv:string;\r\n    opis:string;\r\n    readMe:string;\r\n    komentari?:Komentar;\r\n\r\n    constructor(p:ProjekatInterface){\r\n        this.id=p.id;\r\n        this.naziv=p.naziv;\r\n        this.opis=p.opis;\r\n        this.readMe=p.readMe;\r\n        this.komentari=p.komentari;\r\n    }\r\n}\r\n","\r\n\r\nexport interface UserInterface{\r\n    id?:number;\r\n    firstName?:string;\r\n    lastName?:string;\r\n    username?:string;\r\n    password?:string;\r\n \r\n\r\n}\r\n\r\nexport class User implements UserInterface{\r\n    id:number;\r\n    firstName:string;\r\n    lastName:string;\r\n    username:string;\r\n    password:string;\r\n   \r\n\r\n\r\n    constructor(ucf:UserInterface){\r\n        this.id=ucf.id;\r\n        this.firstName=ucf.firstName;\r\n        this.lastName=ucf.lastName;\r\n        this.username=ucf.username;\r\n        this.password=ucf.password;\r\n       \r\n    }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>\\r\\n  There is nothing here!\\r\\n</h1>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2pla2F0LWRldGFpbHMvcHJvamVrYXQtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div *ngIf=projekat>\\n    <h2>{{projekat.naziv}}</h2>\\n    <p>{{projekat.opis}}</p>\\n    <br>\\n    <br>\\n    <p>{{projekat.readMe}}</p>\\n    <br>\\n    <br>\\n    <div>\\n      Komentari \\n\\n      <br>\\n      <br>\\n      <button (click)=\\\"komentarToggle()\\\"> Dodaj Komentar</button>\\n      <div class =\\\"lg-2\\\" *ngIf=dodajKomentar>\\n      <form (ngSubmit)=\\\"addComment()\\\">\\n          <div>\\n            <label for=\\\"\\\">Komentar</label>\\n            <textarea class=\\\"form-control\\\" name=\\\"input-project\\\" id=\\\"input-commentar\\\" [(ngModel)]=\\\"noviKomentar.komentar\\\" ></textarea>\\n            <label for=\\\"\\\">Ime Korisnika</label>\\n            <input class=\\\"form-control\\\" name=\\\"ime-korisnika\\\" id=\\\"input-commentar\\\" style=\\\"width:30%\\\" [(ngModel)]=\\\"noviKomentar.imeKorisnika\\\" />\\n            <span>\\n              \\n              <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Dodaj\\\" />\\n            </span>\\n          </div>\\n        </form>\\n      </div>\\n        <br>\\n        <br>\\n      <div *ngFor=\\\"let k of projekat.komentari\\\">\\n       <div id=\\\"kometar\\\"> \\n         <p> {{k.komentar}}</p>\\n         <p>By: {{k.imeKorisnika}}</p>\\n         <button class=\\\"glyphicon glyphicon-thumbs-up\\\"></button> \\n              <button class=\\\"glyphicon glyphicon-thumbs-down\\\"></button>\\n        <!-- <button>upVote</button> -->\\n      </div>\\n      <hr style=\\\"width: 100%; color: black; height: 1px; background-color:black;\\\">\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProjekatService } from '../projekat.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {  Projekat } from '../models/projekat.model';\nimport { Komentar, KomentarKlasa } from '../models/komentar.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserInterface } from '../models/user.model.1';\nimport { AuthenticationService } from '../security/authentication.service';\n\n@Component({\n  selector: 'app-projekat-details',\n  templateUrl: './projekat-details.component.html',\n  styleUrls: ['./projekat-details.component.css']\n})\nexport class ProjekatDetailsComponent implements OnInit {\n\n  dodajKomentar:boolean;\n\n  constructor(private route: ActivatedRoute, private projekatService:ProjekatService, private http:HttpClient, private atuhetntication:AuthenticationService) { }\n\n  noviKomentar:Komentar;\n  ngOnInit( ) {\n    //this.getUserName();\n   // this.completeUser();\n   this.getProjekat();\n    this.noviKomentar=new KomentarKlasa ({\n      id:0,\n      imeKorisnika:'',\n      projekat:{},\n     komentar:'',\n        upVote:0,\n        downVote:0,\n    })\n  }\n\n  sub:any;\n  id:number;\n  projekat:Projekat;\n  user:UserInterface;\n  korisnikUsername:string;\n\n  komentarToggle(){\n    this.dodajKomentar=!this.dodajKomentar\n  }\n  getProjekat(){\n    this.sub= this.route.params.subscribe((params)=>{\n      this.id=+params['id'];\n      this.projekatService.getOne(this.id).subscribe((res:Projekat)=>{\n        this.projekat=res;\n      })\n    })\n  }\n\n\n  addComment(){\n    let k=this.noviKomentar;\n    k.projekat=this.projekat;\n\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    this.http.post('api/projekti/komentar', k, {headers}).subscribe((res:any)=>{\n      this.getProjekat();\n    })\n\n  }\n\n  getUserName(){\n    this.korisnikUsername= this.atuhetntication.getUser();\n  \n    }\n  \n    completeUser(){\n      this.projekatService.getUser(this.korisnikUsername).subscribe((rets:UserInterface)=>{\n        this.user=rets;\n      \n    \n      \n      })\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Projekat } from './models/projekat.model';\nimport { UserInterface } from './models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjekatService {\n\n  constructor(private http:HttpClient) { }\n\n\n\n  getAll(pageNumber:number):Observable<Page>{\n   return this.http.get<Page>(`api/projekti?page=${pageNumber}&size=3`);\n  }\n  getUser(user:string): Observable<UserInterface>{\n    return this.http.get<UserInterface>(`/users/${user}`);\n  }\n\n  getOne(id:number):Observable<Projekat>{\n    return this.http.get<Projekat>(`api/projekti/${id}`);\n  }\n\n  filterPoNazivu(naziv:string):Observable<Page>{\n    return this.http.get<Page>(`api/projekti/filter?naziv=${naziv}`);\n  }\n\n  save(projekat:Projekat):Observable<Projekat>{\n    let headers=new HttpHeaders({'Content-Type':'application/json'});\n\n    return this.http.post<Projekat>('api/projekti', JSON.stringify(projekat), {headers});\n    \n  }\n\n  izmena(id:number,projekat:Projekat):Observable<Projekat>{\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.put<Projekat>(`api/projekti/${id}`, projekat, { headers });\n  }\n\n  \n}\n","module.exports = \".btn{\\r\\n    width: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cmFjaWphL3JlZ2lzdHJhY2lqYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0cmFjaWphL3JlZ2lzdHJhY2lqYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bntcclxuICAgIHdpZHRoOiA0MHB4O1xyXG59Il19 */\"","module.exports = \"\\n<div class=\\\"container\\\">\\n<form  class=\\\"form-signin\\\" (ngSubmit) = \\\"register()\\\">\\n    <h2 class=\\\"form-signin-heading\\\">Register Here</h2>\\n  <label for=\\\"student-number\\\">Name </label>\\n  <input class=\\\"form-control\\\" name=\\\"name\\\"  type=\\\"text\\\" [(ngModel)]=\\\"newUser.firstName\\\"/>\\n  <br/>\\n  <label for=\\\"student-number\\\">LastName</label>\\n  <input class=\\\"form-control\\\" name=\\\"surname\\\"  type=\\\"text\\\" [(ngModel)]=\\\"newUser.lastName\\\"/>\\n  <br/>\\n  <label for=\\\"student-number\\\">Username</label>\\n  <input class=\\\"form-control\\\" name=\\\"username\\\"  type=\\\"text\\\" [(ngModel)]=\\\"newUser.username\\\"  />\\n  <br/>\\n  <label for=\\\"student-number\\\">Password</label>\\n  <input  class=\\\"form-control\\\"name=\\\"pass\\\"  type=\\\"text\\\" [(ngModel)]=\\\"newUser.password\\\"/>\\n  <input  class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\" value=\\\"Register\\\"/>\\n\\n\\n  <div *ngIf=existingUser class=\\\"alert alert-warning box-msg\\\" role=\\\"alert\\\">\\n    Choose diferent username\\n  </div>\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registracija',\n  templateUrl: './registracija.component.html',\n  styleUrls: ['./registracija.component.css']\n})\nexport class RegistracijaComponent implements OnInit {\n  usersInSystem:User[];\n  existingUser:boolean;\n  newUser:User;\n  constructor(private http:HttpClient,private router: Router) { \n    this.newUser =new  User ({\n      firstName:'',\n      lastName:'',\n      username:'',\n      password:'',\n    })\n    this.existingUser=false;\n  }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n  \n  getUsers(){\n    this.http.get('api/users').subscribe((res:User[]) =>{\n      this.usersInSystem=res;\n    })\n  }\n\n\n  register(){\n    this.chechUser(this.newUser.username);\n    let headers=new HttpHeaders({'Content-Type':'application/json'});\n\n    this.http.post<User>('api/register',this.newUser,{headers}).subscribe((res:any)=>{\n      if(!this.existingUser){\n      this.router.navigate(['/main']);\n      }else{\n        this.existingUser=true;\n      }\n    })\n\n  }\n\n\n  chechUser(username:string){\n    for(let u of this.usersInSystem){\n      if(u.username !== username){\n        \n        this.existingUser=false;\n      }else{\n        this.existingUser=true;\n     \n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\n// import { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { JwtUtilsService } from '../security/jwt-utils.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private readonly loginPath = '/api/login'\r\n\r\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(this.loginPath, JSON.stringify({ username, password }), { headers })\r\n      .pipe(\r\n        map((res: any) => {\r\n          let token = res && res['token'];\r\n          if (token) {\r\n            localStorage.setItem('currentUser', JSON.stringify({ \r\n                                      username: username, \r\n                                      roles:this.jwtUtilsService.getRoles(token), \r\n                                      token: token \r\n                                    }));\r\n            return true;\r\n          }\r\n          else {\r\n            return false;\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  getToken(): String {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n    return token ? token : \"\";\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isLoggedIn(): boolean{\r\n    if(this.getToken()!='') return true;\r\n    else return false;\r\n  }\r\n\r\n  getCurrentUser(){\r\n    if(localStorage.currentUser){\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else{\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  getUser(){\r\n    \r\n    if(localStorage.currentUser){\r\n      let user = JSON.parse(localStorage.getItem('currentUser'))\r\n     return user.username;\r\n     \r\n    }\r\n    else{\r\n      return undefined;\r\n    }\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../security/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class CanActivateAuthGuard implements CanActivate {\r\n  \r\n  constructor(private authenticationService: AuthenticationService, private router: Router){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if(this.authenticationService.isLoggedIn()){\r\n      return true;\r\n    }\r\n    else{\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class JwtUtilsService {\r\n\r\n  constructor() { }\r\n\r\n  getRoles(token:string){\r\n    let jwtData = token.split('.')[1]\r\n    let decodedJwtJsonData = window.atob(jwtData)\r\n    let decodedJwtData = JSON.parse(decodedJwtJsonData)\r\n    return decodedJwtData.roles.map(x => x.authority)||[];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthenticationService } from '../security/authentication.service';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { HttpEvent } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http/src/headers';\r\nimport { Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private inj: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authenticationService:AuthenticationService = this.inj.get(AuthenticationService); \r\n    request = request.clone({\r\n      setHeaders: {\r\n        'X-Auth-Token': `${authenticationService.getToken()}`\r\n      }\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}